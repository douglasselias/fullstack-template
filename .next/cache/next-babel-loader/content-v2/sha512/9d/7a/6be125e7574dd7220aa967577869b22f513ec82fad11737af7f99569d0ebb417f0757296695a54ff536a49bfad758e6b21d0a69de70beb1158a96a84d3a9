{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/douglas/Projetos/fullstack-template/main/index.page.tsx\";\nimport { useState } from 'react';\nimport { Header } from '@/components/base';\nimport { TasksList } from '@/use-cases/list-tasks/TasksList';\nimport { ListTasksLocalStorage } from '@/use-cases/list-tasks/list-tasks.localstorage';\nimport { AddTaskLocalStorage } from '@/use-cases/add-task/add-task.localstorage';\nimport { DateIdGenerator } from '@/infra/date.id-generator';\nimport { ListTasksInteractor } from '@/use-cases/list-tasks/list-tasks.interactor';\nimport { AddTaskInteractor } from '@/use-cases/add-task/add-task.interactor';\nimport { AddTaskPresentation } from '@/use-cases/add-task/add-task.presentation';\nconst listTasksLocalStorage = new ListTasksLocalStorage();\nconst listTasksInteractor = new ListTasksInteractor(listTasksLocalStorage);\nconst addTaskLocalStorage = new AddTaskLocalStorage();\nconst dateIdGenerator = new DateIdGenerator();\nconst addTaskInteractor = new AddTaskInteractor(addTaskLocalStorage, dateIdGenerator);\nexport function IndexPage() {\n  const {\n    0: tasks,\n    1: setTasks\n  } = useState([]);\n\n  async function callback() {\n    const tasks = await listTasksInteractor.list();\n    setTasks(tasks);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskPresentation, {\n      addTaskUseCase: addTaskInteractor,\n      callback: callback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksList, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/douglas/Projetos/fullstack-template/main/index.page.tsx"],"names":["useState","Header","TasksList","ListTasksLocalStorage","AddTaskLocalStorage","DateIdGenerator","ListTasksInteractor","AddTaskInteractor","AddTaskPresentation","listTasksLocalStorage","listTasksInteractor","addTaskLocalStorage","dateIdGenerator","addTaskInteractor","IndexPage","tasks","setTasks","callback","list"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,kCAA1B;AAEA,SAASC,qBAAT,QAAsC,gDAAtC;AACA,SAASC,mBAAT,QAAoC,4CAApC;AACA,SAASC,eAAT,QAAgC,2BAAhC;AAEA,SAASC,mBAAT,QAAoC,8CAApC;AACA,SAASC,iBAAT,QAAkC,0CAAlC;AAEA,SAASC,mBAAT,QAAoC,4CAApC;AAEA,MAAMC,qBAAqB,GAAG,IAAIN,qBAAJ,EAA9B;AACA,MAAMO,mBAAmB,GAAG,IAAIJ,mBAAJ,CAAwBG,qBAAxB,CAA5B;AAEA,MAAME,mBAAmB,GAAG,IAAIP,mBAAJ,EAA5B;AACA,MAAMQ,eAAe,GAAG,IAAIP,eAAJ,EAAxB;AACA,MAAMQ,iBAAiB,GAAG,IAAIN,iBAAJ,CACxBI,mBADwB,EAExBC,eAFwB,CAA1B;AAKA,OAAO,SAASE,SAAT,GAAkC;AACvC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBhB,QAAQ,CAAC,EAAD,CAAlC;;AAEA,iBAAeiB,QAAf,GAA0B;AACxB,UAAMF,KAAK,GAAG,MAAML,mBAAmB,CAACQ,IAApB,EAApB;AACAF,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,mBAAD;AACE,MAAA,cAAc,EAAEF,iBADlB;AAEE,MAAA,QAAQ,EAAEI;AAFZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD","sourcesContent":["import { useState } from 'react'\n\nimport { Header } from '@/components/base'\nimport { TasksList } from '@/use-cases/list-tasks/TasksList'\n\nimport { ListTasksLocalStorage } from '@/use-cases/list-tasks/list-tasks.localstorage'\nimport { AddTaskLocalStorage } from '@/use-cases/add-task/add-task.localstorage'\nimport { DateIdGenerator } from '@/infra/date.id-generator'\n\nimport { ListTasksInteractor } from '@/use-cases/list-tasks/list-tasks.interactor'\nimport { AddTaskInteractor } from '@/use-cases/add-task/add-task.interactor'\n\nimport { AddTaskPresentation } from '@/use-cases/add-task/add-task.presentation'\n\nconst listTasksLocalStorage = new ListTasksLocalStorage()\nconst listTasksInteractor = new ListTasksInteractor(listTasksLocalStorage)\n\nconst addTaskLocalStorage = new AddTaskLocalStorage()\nconst dateIdGenerator = new DateIdGenerator()\nconst addTaskInteractor = new AddTaskInteractor(\n  addTaskLocalStorage,\n  dateIdGenerator\n)\n\nexport function IndexPage(): JSX.Element {\n  const [tasks, setTasks] = useState([])\n\n  async function callback() {\n    const tasks = await listTasksInteractor.list()\n    setTasks(tasks)\n  }\n\n  return (\n    <>\n      <Header>Tarefas</Header>\n      <AddTaskPresentation\n        addTaskUseCase={addTaskInteractor}\n        callback={callback}\n      />\n      <TasksList tasks={tasks} />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}