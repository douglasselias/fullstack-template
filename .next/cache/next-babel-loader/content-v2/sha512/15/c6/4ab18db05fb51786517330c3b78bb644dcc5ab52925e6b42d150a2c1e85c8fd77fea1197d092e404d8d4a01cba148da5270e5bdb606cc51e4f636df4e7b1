{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { ListTasksLocalStorage } from '@/use-cases/list-tasks/list-tasks.localstorage';\nexport var AddTaskLocalStorage = /*#__PURE__*/function () {\n  function AddTaskLocalStorage() {\n    _classCallCheck(this, AddTaskLocalStorage);\n  }\n\n  _createClass(AddTaskLocalStorage, [{\n    key: \"add\",\n    value: function () {\n      var _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(task) {\n        var repository, tasks;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                repository = new ListTasksLocalStorage();\n                _context.next = 3;\n                return repository.list();\n\n              case 3:\n                tasks = _context.sent;\n                tasks.push(task);\n                localStorage.setItem('tasks', JSON.stringify(tasks));\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function add(_x) {\n        return _add.apply(this, arguments);\n      }\n\n      return add;\n    }()\n  }]);\n\n  return AddTaskLocalStorage;\n}();","map":{"version":3,"sources":["/home/douglas/Projetos/fullstack-template/use-cases/add-task/add-task.localstorage.ts"],"names":["ListTasksLocalStorage","AddTaskLocalStorage","task","repository","list","tasks","push","localStorage","setItem","JSON","stringify"],"mappings":";;;;AAEA,SAASA,qBAAT,QAAsC,gDAAtC;AAEA,WAAaC,mBAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,2FACYC,IADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAEUC,gBAAAA,UAFV,GAEuB,IAAIH,qBAAJ,EAFvB;AAAA;AAAA,uBAGwBG,UAAU,CAACC,IAAX,EAHxB;;AAAA;AAGUC,gBAAAA,KAHV;AAKIA,gBAAAA,KAAK,CAACC,IAAN,CAAWJ,IAAX;AAEAK,gBAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeL,KAAf,CAA9B;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA","sourcesContent":["import { Task } from '@/entities'\nimport { AddTaskRepository } from './add-task.repository'\nimport { ListTasksLocalStorage } from '@/use-cases/list-tasks/list-tasks.localstorage'\n\nexport class AddTaskLocalStorage implements AddTaskRepository {\n  async add(task: Task): Promise<void> {\n    const repository = new ListTasksLocalStorage()\n    const tasks = await repository.list()\n\n    tasks.push(task)\n\n    localStorage.setItem('tasks', JSON.stringify(tasks))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}