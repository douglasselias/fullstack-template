{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/douglas/Projetos/fullstack-template/use-cases/add-task/add-task.presentation.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Input, Button } from '@/components/base';\nexport function AddTaskPresentation(props) {\n  _s();\n\n  var addTaskUseCase = props.addTaskUseCase,\n      callback = props.callback;\n\n  var _useState = useState(''),\n      description = _useState[0],\n      setDescription = _useState[1];\n\n  function onClickAddTask() {\n    return _onClickAddTask.apply(this, arguments);\n  }\n\n  function _onClickAddTask() {\n    _onClickAddTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return addTaskUseCase.add(description);\n\n            case 2:\n              callback();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onClickAddTask.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex my-2\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      onChange: function onChange(value) {\n        return setDescription(value);\n      },\n      placeholder: \"Digite uma tarefa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onClickAddTask,\n      children: \"Adicionar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTaskPresentation, \"T5v5dRzedMK18tfGxj2rihBX8Sg=\");\n\n_c = AddTaskPresentation;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTaskPresentation\");","map":{"version":3,"sources":["/home/douglas/Projetos/fullstack-template/use-cases/add-task/add-task.presentation.tsx"],"names":["useState","Input","Button","AddTaskPresentation","props","addTaskUseCase","callback","description","setDescription","onClickAddTask","add","value"],"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,mBAA9B;AAGA,OAAO,SAASC,mBAAT,CAA6BC,KAA7B,EAAwD;AAAA;;AAAA,MACrDC,cADqD,GACxBD,KADwB,CACrDC,cADqD;AAAA,MACrCC,QADqC,GACxBF,KADwB,CACrCE,QADqC;;AAAA,kBAEvBN,QAAQ,CAAC,EAAD,CAFe;AAAA,MAEtDO,WAFsD;AAAA,MAEzCC,cAFyC;;AAAA,WAI9CC,cAJ8C;AAAA;AAAA;;AAAA;AAAA,+EAI7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQJ,cAAc,CAACK,GAAf,CAAmBH,WAAnB,CADR;;AAAA;AAEED,cAAAA,QAAQ;;AAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJ6D;AAAA;AAAA;;AAU7D,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,QAAQ,EAAE,kBAACK,KAAD;AAAA,eAAWH,cAAc,CAACG,KAAD,CAAzB;AAAA,OADZ;AAEE,MAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEF,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAnBeN,mB;;KAAAA,mB","sourcesContent":["import { useState } from 'react'\n\nimport { Input, Button } from '@/components/base'\nimport { AddTaskUseCase } from './add-task.usecase'\n\nexport function AddTaskPresentation(props: Props): JSX.Element {\n  const { addTaskUseCase, callback } = props\n  const [description, setDescription] = useState('')\n\n  async function onClickAddTask() {\n    await addTaskUseCase.add(description)\n    callback()\n    \n  }\n\n  return (\n    <div className=\"flex my-2\">\n      <Input\n        onChange={(value) => setDescription(value)}\n        placeholder=\"Digite uma tarefa\"\n      />\n      <Button onClick={onClickAddTask}>Adicionar</Button>\n    </div>\n  )\n}\n\ntype Props = {\n  addTaskUseCase: AddTaskUseCase\n  callback(): void\n}\n"]},"metadata":{},"sourceType":"module"}