{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nexport var ListTasksLocalStorage = /*#__PURE__*/function () {\n  function ListTasksLocalStorage() {\n    _classCallCheck(this, ListTasksLocalStorage);\n  }\n\n  _createClass(ListTasksLocalStorage, [{\n    key: \"list\",\n    value: function () {\n      var _list = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var tasks;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                tasks = localStorage.getItem('tasks');\n                return _context.abrupt(\"return\", JSON.parse(tasks || '[]'));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function list() {\n        return _list.apply(this, arguments);\n      }\n\n      return list;\n    }()\n  }]);\n\n  return ListTasksLocalStorage;\n}();","map":{"version":3,"sources":["/home/douglas/Projetos/fullstack-template/use-cases/list-tasks/list-tasks.localstorage.ts"],"names":["ListTasksLocalStorage","tasks","localStorage","getItem","JSON","parse"],"mappings":";;;;AAGA,WAAaA,qBAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEUC,gBAAAA,KAFV,GAEkBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAFlB;AAAA,iDAGWC,IAAI,CAACC,KAAL,CAAWJ,KAAK,IAAI,IAApB,CAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA","sourcesContent":["import { Task } from '@/entities'\nimport { ListTasksRepository } from './list-tasks.repository'\n\nexport class ListTasksLocalStorage implements ListTasksRepository {\n  async list(): Promise<Task[]> {\n    const tasks = localStorage.getItem('tasks')\n    return JSON.parse(tasks || '[]')\n  }\n}\n"]},"metadata":{},"sourceType":"module"}