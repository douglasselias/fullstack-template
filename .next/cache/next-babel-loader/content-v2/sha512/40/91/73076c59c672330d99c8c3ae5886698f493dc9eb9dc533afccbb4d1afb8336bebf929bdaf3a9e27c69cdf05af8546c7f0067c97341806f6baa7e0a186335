{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/douglas/Projetos/fullstack-template/main/index.page.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Header } from '@/components/base';\nimport { TasksList } from '@/use-cases/list-tasks/TasksList';\nimport { ListTasksLocalStorage } from '@/use-cases/list-tasks/list-tasks.localstorage';\nimport { AddTaskLocalStorage } from '@/use-cases/add-task/add-task.localstorage';\nimport { DateIdGenerator } from '@/infra/date.id-generator';\nimport { ListTasksInteractor } from '@/use-cases/list-tasks/list-tasks.interactor';\nimport { AddTaskInteractor } from '@/use-cases/add-task/add-task.interactor';\nimport { ToggleIsDoneTaskInteractor } from '@/use-cases/toggle-is-done-task/toggle-is-done-task.interactor';\nimport { ToggleIsDoneTaskLocalStorage } from '@/use-cases/toggle-is-done-task/toggle-is-done-task.localstorage';\nimport { AddTaskPresentation } from '@/use-cases/add-task/add-task.presentation';\nvar listTasksLocalStorage = new ListTasksLocalStorage();\nvar listTasksInteractor = new ListTasksInteractor(listTasksLocalStorage);\nvar toggleIsDoneTaskLocalStorage = new ToggleIsDoneTaskLocalStorage();\nvar toggleIsDoneTaskInteractor = new ToggleIsDoneTaskInteractor(toggleIsDoneTaskLocalStorage);\nvar addTaskLocalStorage = new AddTaskLocalStorage();\nvar dateIdGenerator = new DateIdGenerator();\nvar addTaskInteractor = new AddTaskInteractor(addTaskLocalStorage, dateIdGenerator);\nexport function IndexPage() {\n  _s();\n\n  var _useState = useState([]),\n      tasks = _useState[0],\n      setTasks = _useState[1];\n\n  function callback() {\n    return _callback.apply(this, arguments);\n  }\n\n  function _callback() {\n    _callback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var tasks;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return listTasksInteractor.list();\n\n            case 2:\n              tasks = _context.sent;\n              setTasks(tasks);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _callback.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskPresentation, {\n      addTaskUseCase: addTaskInteractor,\n      callback: callback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksList, {\n      tasks: tasks,\n      toggleIsDoneTaskInteractor: toggleIsDoneTaskInteractor,\n      callback: callback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(IndexPage, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n\n_c = IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/home/douglas/Projetos/fullstack-template/main/index.page.tsx"],"names":["useState","Header","TasksList","ListTasksLocalStorage","AddTaskLocalStorage","DateIdGenerator","ListTasksInteractor","AddTaskInteractor","ToggleIsDoneTaskInteractor","ToggleIsDoneTaskLocalStorage","AddTaskPresentation","listTasksLocalStorage","listTasksInteractor","toggleIsDoneTaskLocalStorage","toggleIsDoneTaskInteractor","addTaskLocalStorage","dateIdGenerator","addTaskInteractor","IndexPage","tasks","setTasks","callback","list"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,kCAA1B;AAEA,SAASC,qBAAT,QAAsC,gDAAtC;AACA,SAASC,mBAAT,QAAoC,4CAApC;AACA,SAASC,eAAT,QAAgC,2BAAhC;AAEA,SAASC,mBAAT,QAAoC,8CAApC;AACA,SAASC,iBAAT,QAAkC,0CAAlC;AACA,SAASC,0BAAT,QAA2C,gEAA3C;AACA,SAASC,4BAAT,QAA6C,kEAA7C;AAEA,SAASC,mBAAT,QAAoC,4CAApC;AAEA,IAAMC,qBAAqB,GAAG,IAAIR,qBAAJ,EAA9B;AACA,IAAMS,mBAAmB,GAAG,IAAIN,mBAAJ,CAAwBK,qBAAxB,CAA5B;AAEA,IAAME,4BAA4B,GAAG,IAAIJ,4BAAJ,EAArC;AACA,IAAMK,0BAA0B,GAAG,IAAIN,0BAAJ,CACjCK,4BADiC,CAAnC;AAIA,IAAME,mBAAmB,GAAG,IAAIX,mBAAJ,EAA5B;AACA,IAAMY,eAAe,GAAG,IAAIX,eAAJ,EAAxB;AACA,IAAMY,iBAAiB,GAAG,IAAIV,iBAAJ,CACxBQ,mBADwB,EAExBC,eAFwB,CAA1B;AAKA,OAAO,SAASE,SAAT,GAAkC;AAAA;;AAAA,kBACblB,QAAQ,CAAC,EAAD,CADK;AAAA,MAChCmB,KADgC;AAAA,MACzBC,QADyB;;AAAA,WAGxBC,QAHwB;AAAA;AAAA;;AAAA;AAAA,yEAGvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACsBT,mBAAmB,CAACU,IAApB,EADtB;;AAAA;AACQH,cAAAA,KADR;AAEEC,cAAAA,QAAQ,CAACD,KAAD,CAAR;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHuC;AAAA;AAAA;;AAQvC,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,mBAAD;AACE,MAAA,cAAc,EAAEF,iBADlB;AAEE,MAAA,QAAQ,EAAEI;AAFZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,SAAD;AACE,MAAA,KAAK,EAAEF,KADT;AAEE,MAAA,0BAA0B,EAAEL,0BAF9B;AAGE,MAAA,QAAQ,EAAEO;AAHZ;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAcD;;GAtBeH,S;;KAAAA,S","sourcesContent":["import { useState } from 'react'\n\nimport { Header } from '@/components/base'\nimport { TasksList } from '@/use-cases/list-tasks/TasksList'\n\nimport { ListTasksLocalStorage } from '@/use-cases/list-tasks/list-tasks.localstorage'\nimport { AddTaskLocalStorage } from '@/use-cases/add-task/add-task.localstorage'\nimport { DateIdGenerator } from '@/infra/date.id-generator'\n\nimport { ListTasksInteractor } from '@/use-cases/list-tasks/list-tasks.interactor'\nimport { AddTaskInteractor } from '@/use-cases/add-task/add-task.interactor'\nimport { ToggleIsDoneTaskInteractor } from '@/use-cases/toggle-is-done-task/toggle-is-done-task.interactor'\nimport { ToggleIsDoneTaskLocalStorage } from '@/use-cases/toggle-is-done-task/toggle-is-done-task.localstorage'\n\nimport { AddTaskPresentation } from '@/use-cases/add-task/add-task.presentation'\n\nconst listTasksLocalStorage = new ListTasksLocalStorage()\nconst listTasksInteractor = new ListTasksInteractor(listTasksLocalStorage)\n\nconst toggleIsDoneTaskLocalStorage = new ToggleIsDoneTaskLocalStorage()\nconst toggleIsDoneTaskInteractor = new ToggleIsDoneTaskInteractor(\n  toggleIsDoneTaskLocalStorage\n)\n\nconst addTaskLocalStorage = new AddTaskLocalStorage()\nconst dateIdGenerator = new DateIdGenerator()\nconst addTaskInteractor = new AddTaskInteractor(\n  addTaskLocalStorage,\n  dateIdGenerator\n)\n\nexport function IndexPage(): JSX.Element {\n  const [tasks, setTasks] = useState([])\n\n  async function callback() {\n    const tasks = await listTasksInteractor.list()\n    setTasks(tasks)\n  }\n\n  return (\n    <>\n      <Header>Tarefas</Header>\n      <AddTaskPresentation\n        addTaskUseCase={addTaskInteractor}\n        callback={callback}\n      />\n      <TasksList\n        tasks={tasks}\n        toggleIsDoneTaskInteractor={toggleIsDoneTaskInteractor}\n        callback={callback}\n      />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}