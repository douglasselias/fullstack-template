{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/douglas/Projetos/fullstack-template/use-cases/list-tasks/TasksList.tsx\";\nexport function TasksList(props) {\n  const {\n    tasks,\n    toggleIsDoneTaskInteractor,\n    callback\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list-disc\",\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: task.isDone ? 'line-through' : '',\n      onClick: () => {\n        toggleIsDoneTaskInteractor.toggle(task.id);\n        callback();\n      },\n      children: task.description\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/douglas/Projetos/fullstack-template/use-cases/list-tasks/TasksList.tsx"],"names":["TasksList","props","tasks","toggleIsDoneTaskInteractor","callback","map","task","isDone","toggle","id","description"],"mappings":";;AAGA,OAAO,SAASA,SAAT,CAAmBC,KAAnB,EAA8C;AACnD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,0BAAT;AAAqCC,IAAAA;AAArC,MAAkDH,KAAxD;AAEA,sBACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA,cACGC,KAAK,CAACG,GAAN,CAAWC,IAAD,iBACT;AAEE,MAAA,SAAS,EAAEA,IAAI,CAACC,MAAL,GAAc,cAAd,GAA+B,EAF5C;AAGE,MAAA,OAAO,EAAE,MAAM;AACbJ,QAAAA,0BAA0B,CAACK,MAA3B,CAAkCF,IAAI,CAACG,EAAvC;AACAL,QAAAA,QAAQ;AACT,OANH;AAAA,gBAQGE,IAAI,CAACI;AARR,OACOJ,IAAI,CAACG,EADZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD","sourcesContent":["import { Task } from '@/entities'\nimport { ToggleIsDoneTaskUseCase } from '../toggle-is-done-task/toggle-is-done-task.usecase'\n\nexport function TasksList(props: Props): JSX.Element {\n  const { tasks, toggleIsDoneTaskInteractor, callback } = props\n\n  return (\n    <ul className=\"list-disc\">\n      {tasks.map((task) => (\n        <li\n          key={task.id}\n          className={task.isDone ? 'line-through' : ''}\n          onClick={() => {\n            toggleIsDoneTaskInteractor.toggle(task.id)\n            callback()\n          }}\n        >\n          {task.description}\n        </li>\n      ))}\n    </ul>\n  )\n}\n\ntype Props = {\n  tasks: Task[]\n  toggleIsDoneTaskInteractor: ToggleIsDoneTaskUseCase\n  callback(): void\n}\n"]},"metadata":{},"sourceType":"module"}